{"ast":null,"code":"import _classCallCheck from \"/Users/matruim/Documents/personalLearning/Udemy/Angular/http-01/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/matruim/Documents/personalLearning/Udemy/Angular/http-01/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { HttpClient, HttpHeaders, HttpParams } from \"@angular/common/http\";\nimport { catchError, map, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport var PostService = /*#__PURE__*/(function () {\n  var PostService = /*#__PURE__*/function () {\n    function PostService(http) {\n      _classCallCheck(this, PostService);\n\n      this.http = http;\n      this.url = 'https://angulardb-5dbd9-default-rtdb.firebaseio.com/posts.json';\n    }\n\n    _createClass(PostService, [{\n      key: \"createAndStorePost\",\n      value: function createAndStorePost(title, content) {\n        var postData = {\n          title: title,\n          content: content\n        }; // Send Http request\n\n        return this.http.post(this.url, postData);\n      }\n    }, {\n      key: \"fetchPosts\",\n      value: function fetchPosts() {\n        var searchParams = new HttpParams();\n        searchParams = searchParams.append('print', 'pretty');\n        searchParams = searchParams.append('custom', 'key');\n        return this.http.get(this.url, {\n          headers: new HttpHeaders({\n            'Custom-Header': 'Hello'\n          }),\n          params: searchParams\n        }).pipe(map(function (responseData) {\n          var postArray = [];\n\n          for (var key in responseData) {\n            if (responseData.hasOwnProperty(key)) {\n              postArray.push(Object.assign(Object.assign({}, responseData[key]), {\n                id: key\n              }));\n            }\n          }\n\n          return postArray;\n        }), catchError(function (errorRes) {\n          console.log(errorRes);\n          return throwError(errorRes);\n        }));\n      }\n    }, {\n      key: \"deleteAllPosts\",\n      value: function deleteAllPosts() {\n        return this.http.delete(this.url);\n      }\n    }]);\n\n    return PostService;\n  }();\n\n  PostService.ɵfac = function PostService_Factory(t) {\n    return new (t || PostService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  PostService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PostService,\n    factory: PostService.ɵfac,\n    providedIn: 'root'\n  });\n  return PostService;\n})();","map":null,"metadata":{},"sourceType":"module"}