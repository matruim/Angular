{"ast":null,"code":"import _classCallCheck from \"/Users/matruim/Documents/personalLearning/Udemy/Angular/routing/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/matruim/Documents/personalLearning/Udemy/Angular/routing/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { ServersService } from '../servers.service';\nimport { ActivatedRoute } from \"@angular/router\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../servers.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction EditServerComponent_button_12_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function EditServerComponent_button_12_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      var ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.onUpdateServer();\n    });\n    i0.ɵɵtext(1, \" Update Server\\n\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport var EditServerComponent = /*#__PURE__*/(function () {\n  var EditServerComponent = /*#__PURE__*/function () {\n    function EditServerComponent(serversService, route) {\n      _classCallCheck(this, EditServerComponent);\n\n      this.serversService = serversService;\n      this.route = route;\n      this.serverName = '';\n      this.serverStatus = '';\n      this.allowEdit = false;\n    }\n\n    _createClass(EditServerComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this = this;\n\n        var id = +this.route.snapshot.params['id'];\n        this.server = this.serversService.getServer(id);\n        this.serverName = this.server.name;\n        this.serverStatus = this.server.status;\n        this.route.params.subscribe(function (params) {\n          _this.server = _this.serversService.getServer(+params['id']);\n          _this.serverName = _this.server.name;\n          _this.serverStatus = _this.server.status;\n        });\n        this.route.queryParams.subscribe(function (queryParams) {\n          _this.allowEdit = queryParams['allowEdit'] === '1';\n        });\n      }\n    }, {\n      key: \"onUpdateServer\",\n      value: function onUpdateServer() {\n        this.serversService.updateServer(this.server.id, {\n          name: this.serverName,\n          status: this.serverStatus\n        });\n      }\n    }]);\n\n    return EditServerComponent;\n  }();\n\n  EditServerComponent.ɵfac = function EditServerComponent_Factory(t) {\n    return new (t || EditServerComponent)(i0.ɵɵdirectiveInject(i1.ServersService), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n  };\n\n  EditServerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditServerComponent,\n    selectors: [[\"app-edit-server\"]],\n    decls: 13,\n    vars: 3,\n    consts: [[1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"status\"], [\"id\", \"status\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"online\"], [\"value\", \"offline\"], [\"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function EditServerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Server Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function EditServerComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.serverName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 0);\n        i0.ɵɵelementStart(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Server Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"select\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function EditServerComponent_Template_select_ngModelChange_7_listener($event) {\n          return ctx.serverStatus = $event;\n        });\n        i0.ɵɵelementStart(8, \"option\", 5);\n        i0.ɵɵtext(9, \"Online\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"option\", 6);\n        i0.ɵɵtext(11, \"Offline\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, EditServerComponent_button_12_Template, 2, 0, \"button\", 7);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.serverName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.serverStatus);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.allowEdit);\n      }\n    },\n    directives: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i3.SelectControlValueAccessor, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i4.NgIf],\n    styles: [\"\"]\n  });\n  return EditServerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}